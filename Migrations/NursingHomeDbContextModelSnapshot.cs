// <auto-generated />
using System;
using EntityFrameworkCore.Jet.Metadata;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WinFormsWorkApp1.Helpers;

#nullable disable

namespace WinFormsWorkApp1.Migrations
{
    [DbContext(typeof(NursingHomeDbContext))]
    partial class NursingHomeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WinFormsWorkApp1.Models.AttendanceRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CheckOutTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AttendanceRecords");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.Bed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BedNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Facilities")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("MonthlyRate")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Beds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BedNumber = "101-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "独立卫生间、空调、电视、衣柜",
                            MonthlyRate = 3000m,
                            Notes = "",
                            RoomNumber = "101",
                            RoomType = "单人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 2,
                            BedNumber = "102-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "独立卫生间、空调、电视、衣柜",
                            MonthlyRate = 3000m,
                            Notes = "",
                            RoomNumber = "102",
                            RoomType = "单人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 3,
                            BedNumber = "103-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "独立卫生间、空调、电视、衣柜",
                            MonthlyRate = 3000m,
                            Notes = "",
                            RoomNumber = "103",
                            RoomType = "单人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 4,
                            BedNumber = "104-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "独立卫生间、空调、电视、衣柜",
                            MonthlyRate = 3000m,
                            Notes = "",
                            RoomNumber = "104",
                            RoomType = "单人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 5,
                            BedNumber = "105-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "独立卫生间、空调、电视、衣柜",
                            MonthlyRate = 3000m,
                            Notes = "",
                            RoomNumber = "105",
                            RoomType = "单人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 6,
                            BedNumber = "106-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "106",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 7,
                            BedNumber = "106-02",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "106",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 8,
                            BedNumber = "107-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "107",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 9,
                            BedNumber = "107-02",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "107",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 10,
                            BedNumber = "108-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "108",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 11,
                            BedNumber = "108-02",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "108",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 12,
                            BedNumber = "109-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "109",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 13,
                            BedNumber = "109-02",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "109",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 14,
                            BedNumber = "110-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "110",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 15,
                            BedNumber = "110-02",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "110",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 16,
                            BedNumber = "201-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "独立卫生间、空调、电视、衣柜",
                            MonthlyRate = 3000m,
                            Notes = "",
                            RoomNumber = "201",
                            RoomType = "单人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 17,
                            BedNumber = "202-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "独立卫生间、空调、电视、衣柜",
                            MonthlyRate = 3000m,
                            Notes = "",
                            RoomNumber = "202",
                            RoomType = "单人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 18,
                            BedNumber = "203-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "独立卫生间、空调、电视、衣柜",
                            MonthlyRate = 3000m,
                            Notes = "",
                            RoomNumber = "203",
                            RoomType = "单人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 19,
                            BedNumber = "204-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "独立卫生间、空调、电视、衣柜",
                            MonthlyRate = 3000m,
                            Notes = "",
                            RoomNumber = "204",
                            RoomType = "单人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 20,
                            BedNumber = "205-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "独立卫生间、空调、电视、衣柜",
                            MonthlyRate = 3000m,
                            Notes = "",
                            RoomNumber = "205",
                            RoomType = "单人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 21,
                            BedNumber = "206-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "206",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 22,
                            BedNumber = "206-02",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "206",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 23,
                            BedNumber = "207-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "207",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 24,
                            BedNumber = "207-02",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "207",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 25,
                            BedNumber = "208-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "208",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 26,
                            BedNumber = "208-02",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "208",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 27,
                            BedNumber = "209-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "209",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 28,
                            BedNumber = "209-02",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "209",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 29,
                            BedNumber = "210-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "210",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 30,
                            BedNumber = "210-02",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "210",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 31,
                            BedNumber = "301-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "独立卫生间、空调、电视、衣柜",
                            MonthlyRate = 3000m,
                            Notes = "",
                            RoomNumber = "301",
                            RoomType = "单人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 32,
                            BedNumber = "302-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "独立卫生间、空调、电视、衣柜",
                            MonthlyRate = 3000m,
                            Notes = "",
                            RoomNumber = "302",
                            RoomType = "单人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 33,
                            BedNumber = "303-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "独立卫生间、空调、电视、衣柜",
                            MonthlyRate = 3000m,
                            Notes = "",
                            RoomNumber = "303",
                            RoomType = "单人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 34,
                            BedNumber = "304-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "独立卫生间、空调、电视、衣柜",
                            MonthlyRate = 3000m,
                            Notes = "",
                            RoomNumber = "304",
                            RoomType = "单人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 35,
                            BedNumber = "305-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "独立卫生间、空调、电视、衣柜",
                            MonthlyRate = 3000m,
                            Notes = "",
                            RoomNumber = "305",
                            RoomType = "单人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 36,
                            BedNumber = "306-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "306",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 37,
                            BedNumber = "306-02",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "306",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 38,
                            BedNumber = "307-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "307",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 39,
                            BedNumber = "307-02",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "307",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 40,
                            BedNumber = "308-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "308",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 41,
                            BedNumber = "308-02",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "308",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 42,
                            BedNumber = "309-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "309",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 43,
                            BedNumber = "309-02",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "309",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 44,
                            BedNumber = "310-01",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "310",
                            RoomType = "双人间",
                            Status = "空闲"
                        },
                        new
                        {
                            Id = 45,
                            BedNumber = "310-02",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Facilities = "共用卫生间、空调、电视、衣柜",
                            MonthlyRate = 2000m,
                            Notes = "",
                            RoomNumber = "310",
                            RoomType = "双人间",
                            Status = "空闲"
                        });
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.CarePackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CareLevel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<bool>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<decimal>("MonthlyPrice")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ServiceItems")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("longchar");

                    b.HasKey("Id");

                    b.ToTable("CarePackages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CareLevel = "自理",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "适合生活能够自理的老人",
                            IsActive = true,
                            MonthlyPrice = 800m,
                            PackageName = "基础护理套餐",
                            ServiceItems = "日常生活协助、健康监测、定期查房、紧急呼叫"
                        },
                        new
                        {
                            Id = 2,
                            CareLevel = "半护理",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "适合部分生活需要协助的老人",
                            IsActive = true,
                            MonthlyPrice = 1500m,
                            PackageName = "半护理套餐",
                            ServiceItems = "日常生活协助、个人卫生护理、用药提醒、康复训练、健康监测"
                        },
                        new
                        {
                            Id = 3,
                            CareLevel = "全护理",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "适合生活完全不能自理的老人",
                            IsActive = true,
                            MonthlyPrice = 2500m,
                            PackageName = "全护理套餐",
                            ServiceItems = "全面生活护理、医疗护理、康复训练、心理关怀、24小时监护"
                        },
                        new
                        {
                            Id = 4,
                            CareLevel = "特护",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "适合有特殊医疗需求的老人",
                            IsActive = true,
                            MonthlyPrice = 4000m,
                            PackageName = "特护套餐",
                            ServiceItems = "专业医疗护理、特殊设备使用、专人24小时陪护、医生定期巡诊"
                        });
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.CareRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CareContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<DateTime>("CareDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CarePackageId")
                        .HasColumnType("integer");

                    b.Property<string>("CareResult")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CareType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CaregiverName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<int>("ResidentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CarePackageId");

                    b.HasIndex("ResidentId");

                    b.ToTable("CareRecords");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.Consultant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Consultants");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("Age")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmergencyContact")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmergencyPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime");

                    b.Property<string>("IdCard")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("varchar(18)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<DateTime?>("LastMaintenanceDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MaintenanceRecord")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("NextMaintenanceDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.FeeRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<DateTime>("BillingDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<int>("FeeTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<int>("ResidentId")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("FeeTypeId");

                    b.HasIndex("ResidentId");

                    b.ToTable("FeeRecords");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.FeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillingCycle")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<decimal>("StandardPrice")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("FeeTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillingCycle = "月",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "每月床位租赁费用",
                            IsActive = true,
                            StandardPrice = 0m,
                            TypeName = "床位费"
                        },
                        new
                        {
                            Id = 2,
                            BillingCycle = "月",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "护理服务费用",
                            IsActive = true,
                            StandardPrice = 0m,
                            TypeName = "护理费"
                        },
                        new
                        {
                            Id = 3,
                            BillingCycle = "月",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "一日三餐费用",
                            IsActive = true,
                            StandardPrice = 0m,
                            TypeName = "餐饮费"
                        },
                        new
                        {
                            Id = 4,
                            BillingCycle = "月",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "医疗服务和药品费用",
                            IsActive = true,
                            StandardPrice = 0m,
                            TypeName = "医疗费"
                        },
                        new
                        {
                            Id = 5,
                            BillingCycle = "月",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "日常生活用品费用",
                            IsActive = true,
                            StandardPrice = 0m,
                            TypeName = "生活用品费"
                        },
                        new
                        {
                            Id = 6,
                            BillingCycle = "月",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "文娱活动参与费用",
                            IsActive = true,
                            StandardPrice = 0m,
                            TypeName = "娱乐活动费"
                        },
                        new
                        {
                            Id = 7,
                            BillingCycle = "月",
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "其他杂项费用",
                            IsActive = true,
                            StandardPrice = 0m,
                            TypeName = "其他费用"
                        });
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.HealthRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BloodPressureHigh")
                        .HasColumnType("DECIMAL(5,1)");

                    b.Property<decimal?>("BloodPressureLow")
                        .HasColumnType("DECIMAL(5,1)");

                    b.Property<decimal?>("BloodSugar")
                        .HasColumnType("DECIMAL(5,2)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("longchar");

                    b.Property<decimal?>("HeartRate")
                        .HasColumnType("DECIMAL(5,1)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("DECIMAL(5,2)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RecordType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RecorderName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RecorderType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("ResidentId")
                        .HasColumnType("integer");

                    b.Property<string>("Symptoms")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("longchar");

                    b.Property<decimal?>("Temperature")
                        .HasColumnType("DECIMAL(4,1)");

                    b.Property<string>("Treatment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("longchar");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("DECIMAL(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("ResidentId");

                    b.ToTable("HealthRecords");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastCheckDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<DateTime?>("ProductionDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.InventoryTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<string>("Operator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("InventoryTransactions");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("MinimumStock")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SupplierPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("integer");

                    b.Property<int>("WarningStock")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.LeaveRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ApprovedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Days")
                        .HasColumnType("DECIMAL(4,1)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LeaveType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("LeaveRecords");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.MealRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Appetite")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("MealDate")
                        .HasColumnType("datetime");

                    b.Property<string>("MealType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MenuItems")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<int>("ResidentId")
                        .HasColumnType("integer");

                    b.Property<string>("SpecialDiet")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.HasKey("Id");

                    b.HasIndex("ResidentId");

                    b.ToTable("MealRecords");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.MedicalMonitoring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("MonitoredBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MonitoredByType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("MonitoringDate")
                        .HasColumnType("datetime");

                    b.Property<string>("MonitoringItem")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MonitoringType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NormalRange")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<string>("Recommendations")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("longchar");

                    b.Property<int>("ResidentId")
                        .HasColumnType("integer");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ResidentId");

                    b.ToTable("MedicalMonitorings");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.Medication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Indications")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("longchar");

                    b.Property<bool>("IsActive")
                        .HasColumnType("smallint");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MedicationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MedicationType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SideEffects")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("longchar");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("StorageConditions")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.HasKey("Id");

                    b.ToTable("Medications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indications = "预防心脑血管疾病",
                            IsActive = true,
                            Manufacturer = "拜耳",
                            MedicationName = "阿司匹林",
                            MedicationType = "心血管药物",
                            SideEffects = "",
                            Specification = "100mg*30片",
                            StorageConditions = ""
                        },
                        new
                        {
                            Id = 2,
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indications = "高血压治疗",
                            IsActive = true,
                            Manufacturer = "诺华",
                            MedicationName = "降压灵",
                            MedicationType = "降压药",
                            SideEffects = "",
                            Specification = "5mg*28片",
                            StorageConditions = ""
                        },
                        new
                        {
                            Id = 3,
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indications = "2型糖尿病治疗",
                            IsActive = true,
                            Manufacturer = "默克",
                            MedicationName = "二甲双胍",
                            MedicationType = "降糖药",
                            SideEffects = "",
                            Specification = "500mg*30片",
                            StorageConditions = ""
                        },
                        new
                        {
                            Id = 4,
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indications = "补充钙质",
                            IsActive = true,
                            Manufacturer = "汤臣倍健",
                            MedicationName = "钙片",
                            MedicationType = "营养补充剂",
                            SideEffects = "",
                            Specification = "600mg*60片",
                            StorageConditions = ""
                        },
                        new
                        {
                            Id = 5,
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Indications = "促进钙吸收",
                            IsActive = true,
                            Manufacturer = "善存",
                            MedicationName = "维生素D",
                            MedicationType = "维生素",
                            SideEffects = "",
                            Specification = "400IU*90粒",
                            StorageConditions = ""
                        });
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.MedicationRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Dosage")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("MedicationId")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<string>("PrescribedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<int>("ResidentId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Usage")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MedicationId");

                    b.HasIndex("ResidentId");

                    b.ToTable("MedicationRecords");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.OutingRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Companion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CompanionPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<DateTime>("OutTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<int>("ResidentId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ReturnTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ResidentId");

                    b.ToTable("OutingRecords");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.PaymentRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("FeeRecordId")
                        .HasColumnType("integer");

                    b.Property<string>("Operator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ReceiptNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.HasKey("Id");

                    b.HasIndex("FeeRecordId");

                    b.ToTable("PaymentRecords");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BedId")
                        .HasColumnType("integer");

                    b.Property<int>("ConsultantId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<decimal>("EstimatedCost")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<DateTime>("PreferredMoveInDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Requirements")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("BedId");

                    b.HasIndex("ConsultantId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.Resident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Allergies")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<int?>("BedId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CheckInDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CheckOutDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EmergencyContact")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmergencyPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("IdCard")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MedicalHistory")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("BedId");

                    b.ToTable("Residents");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Jet:ValueGenerationStrategy", JetValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Area")
                        .HasColumnType("DECIMAL(8,2)");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("longchar");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.AttendanceRecord", b =>
                {
                    b.HasOne("WinFormsWorkApp1.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.CareRecord", b =>
                {
                    b.HasOne("WinFormsWorkApp1.Models.CarePackage", "CarePackage")
                        .WithMany("CareRecords")
                        .HasForeignKey("CarePackageId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("WinFormsWorkApp1.Models.Resident", "Resident")
                        .WithMany()
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarePackage");

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.FeeRecord", b =>
                {
                    b.HasOne("WinFormsWorkApp1.Models.FeeType", "FeeType")
                        .WithMany("FeeRecords")
                        .HasForeignKey("FeeTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WinFormsWorkApp1.Models.Resident", "Resident")
                        .WithMany()
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FeeType");

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.HealthRecord", b =>
                {
                    b.HasOne("WinFormsWorkApp1.Models.Resident", "Resident")
                        .WithMany()
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.Inventory", b =>
                {
                    b.HasOne("WinFormsWorkApp1.Models.Item", "Item")
                        .WithMany("Inventories")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WinFormsWorkApp1.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.InventoryTransaction", b =>
                {
                    b.HasOne("WinFormsWorkApp1.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WinFormsWorkApp1.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.Item", b =>
                {
                    b.HasOne("WinFormsWorkApp1.Models.Warehouse", null)
                        .WithMany("Items")
                        .HasForeignKey("WarehouseId");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.LeaveRecord", b =>
                {
                    b.HasOne("WinFormsWorkApp1.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.MealRecord", b =>
                {
                    b.HasOne("WinFormsWorkApp1.Models.Resident", "Resident")
                        .WithMany()
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.MedicalMonitoring", b =>
                {
                    b.HasOne("WinFormsWorkApp1.Models.Resident", "Resident")
                        .WithMany()
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.MedicationRecord", b =>
                {
                    b.HasOne("WinFormsWorkApp1.Models.Medication", "Medication")
                        .WithMany("MedicationRecords")
                        .HasForeignKey("MedicationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WinFormsWorkApp1.Models.Resident", "Resident")
                        .WithMany()
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medication");

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.OutingRecord", b =>
                {
                    b.HasOne("WinFormsWorkApp1.Models.Resident", "Resident")
                        .WithMany()
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.PaymentRecord", b =>
                {
                    b.HasOne("WinFormsWorkApp1.Models.FeeRecord", "FeeRecord")
                        .WithMany("PaymentRecords")
                        .HasForeignKey("FeeRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FeeRecord");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.Reservation", b =>
                {
                    b.HasOne("WinFormsWorkApp1.Models.Bed", "Bed")
                        .WithMany("Reservations")
                        .HasForeignKey("BedId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("WinFormsWorkApp1.Models.Consultant", "Consultant")
                        .WithMany("Reservations")
                        .HasForeignKey("ConsultantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bed");

                    b.Navigation("Consultant");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.Resident", b =>
                {
                    b.HasOne("WinFormsWorkApp1.Models.Bed", "Bed")
                        .WithMany()
                        .HasForeignKey("BedId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Bed");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.Bed", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.CarePackage", b =>
                {
                    b.Navigation("CareRecords");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.Consultant", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.FeeRecord", b =>
                {
                    b.Navigation("PaymentRecords");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.FeeType", b =>
                {
                    b.Navigation("FeeRecords");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.Item", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.Medication", b =>
                {
                    b.Navigation("MedicationRecords");
                });

            modelBuilder.Entity("WinFormsWorkApp1.Models.Warehouse", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
